@model Truck

@{
  bool alreadyReviewed = Model.Reviews.Any(r => r.UserId == @Context.Session.GetInt32("UserId"));
}

<div class="container border">
  <div class="row mb-2 p-3">
    <div class="col-md-3">
      <img src="@Model.ImgUrl" alt="Food" class="w-75 rounded-circle">
    </div>

    <div class="col-md-9">
      <h3>
        @Model.Name
      </h3>
      <p>Style: @Model.Style</p>
      <p class="text-muted">
        @{
          double avgRating = Model.AverageRating();
        }
        Average rating: @avgRating <partial name="_Stars" model="@(int)avgRating"></partial>
      </p>
      <small class="text-muted">
        Submitted By: @Model.SubmittedBy.FullName() on @Model.CreatedAt
      </small>
    </div>
  </div>

  <div class="container">
    @foreach (Review review in Model.Reviews)
    {
    <div class="row bg-light border p-3 mb-2">
      <div class="col-md-2">
        @review.Author.FullName()
      </div>
      <div class="col-md-10">
        <p>
          @review.Body
        </p>
        <p>
          <span class="mr-1">
            Rating: @review.Rating
          </span>

          @* without the loop in the <partial> you could do a bunch of if conditions to display the amount of stars *@
          <partial name="_Stars" model="@review.Rating"></partial>
        </p>
      </div>
    </div>
    }
  </div>

  <div class="row mt-3 p-3">
    @{
      // instantiate a new review to provide to the <partial> since because it needs @model Review
      // assign the TruckId to the newReview since we need to associate this review with the truck
      // The TruckId is availabile on this page, but is not available in the <partial> unless it's passed in
      Review newReview = new Review()
      {
        TruckId = Model.TruckId
      };
    }

    @if (!alreadyReviewed)
    {
      <partial name="_Review" model="@newReview"></partial>
    }
  </div>
</div>